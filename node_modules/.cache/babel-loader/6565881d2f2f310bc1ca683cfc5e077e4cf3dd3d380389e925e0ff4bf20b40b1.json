{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mordy.arnon\\\\exten\\\\kahoot-client\\\\src\\\\components\\\\QuestionEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { quizAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionEditor = () => {\n  _s();\n  const [quiz, setQuiz] = useState(null);\n  const [question, setQuestion] = useState({\n    questionText: '',\n    options: ['', '', '', ''],\n    correctAnswerIndex: 0,\n    points: 10,\n    timeLimit: 30\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n  const params = useParams();\n  const {\n    quizId,\n    questionId\n  } = params;\n\n  // Enhanced logic to detect new question creation\n  const urlSuggestsNew = window.location.pathname.includes('/question/new') || window.location.pathname.endsWith('/question/new');\n  const isNewQuestion = questionId === 'new' || !questionId || questionId === 'undefined' || urlSuggestsNew;\n  const isEditing = !isNewQuestion;\n  useEffect(() => {\n    console.log('üîç QuestionEditor mounted with params:', {\n      quizId,\n      questionId,\n      isNewQuestion,\n      isEditing,\n      location: window.location.pathname,\n      allParams: params\n    });\n    loadQuizAndQuestion();\n  }, [quizId, questionId]);\n\n  // Validate questionId early\n  const isValidQuestionId = !questionId || questionId === 'new' || questionId && questionId !== 'undefined' && questionId !== 'null' && !isNaN(questionId);\n\n  // Debug route matching\n  console.log('üõ£Ô∏è Route analysis:', {\n    currentUrl: window.location.pathname,\n    expectedPatterns: ['/quiz/:quizId/question/new', '/quiz/:quizId/question/:questionId/edit'],\n    extractedParams: {\n      quizId,\n      questionId\n    },\n    isNewQuestion,\n    isEditing,\n    isValidQuestionId\n  });\n  const loadQuizAndQuestion = async () => {\n    try {\n      setLoading(true);\n\n      // Always load quiz info\n      const quizResponse = await quizAPI.getQuiz(quizId);\n      setQuiz(quizResponse.data);\n\n      // Load question if editing\n      if (isEditing) {\n        console.log('üîÑ Attempting to load question for editing:', {\n          quizId,\n          questionId,\n          isEditing\n        });\n        if (!questionId || questionId === 'undefined' || questionId === 'null') {\n          console.error('‚ùå Cannot load question - invalid questionId:', questionId);\n          setError('Invalid question ID for editing');\n          return;\n        }\n        try {\n          const questionResponse = await quizAPI.getQuestion(quizId, questionId);\n          const questionData = questionResponse.data;\n          console.log('‚úÖ Question loaded successfully:', questionData);\n          setQuestion({\n            questionText: questionData.questionText,\n            options: questionData.options,\n            correctAnswerIndex: questionData.correctAnswerIndex,\n            points: questionData.points || 10,\n            timeLimit: questionData.timeLimit || 30\n          });\n        } catch (err) {\n          console.error('‚ùå Error loading question:', err);\n          setError('Question not found');\n        }\n      } else {\n        console.log('‚ûï Creating new question - no data to load');\n      }\n    } catch (err) {\n      console.error('Error loading quiz:', err);\n      setError('Quiz not found');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleQuestionChange = e => {\n    setQuestion(prev => ({\n      ...prev,\n      questionText: e.target.value\n    }));\n  };\n  const handleOptionChange = (index, value) => {\n    setQuestion(prev => ({\n      ...prev,\n      options: prev.options.map((option, i) => i === index ? value : option)\n    }));\n  };\n  const handleCorrectAnswerChange = e => {\n    setQuestion(prev => ({\n      ...prev,\n      correctAnswerIndex: parseInt(e.target.value)\n    }));\n  };\n  const handlePointsChange = e => {\n    setQuestion(prev => ({\n      ...prev,\n      points: parseInt(e.target.value) || 10\n    }));\n  };\n  const handleTimeLimitChange = e => {\n    setQuestion(prev => ({\n      ...prev,\n      timeLimit: parseInt(e.target.value) || 30\n    }));\n  };\n  const validateQuestion = () => {\n    if (!question.questionText.trim()) {\n      setError('Please enter a question');\n      return false;\n    }\n    const filledOptions = question.options.filter(option => option.trim());\n    if (filledOptions.length < 2) {\n      setError('Please provide at least 2 options');\n      return false;\n    }\n    if (!question.options[question.correctAnswerIndex].trim()) {\n      setError('The correct answer option cannot be empty');\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (!validateQuestion()) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const questionData = {\n        question: question.questionText.trim(),\n        options: question.options.map(opt => opt.trim()).filter(Boolean),\n        correctAnswer: question.correctAnswerIndex,\n        points: question.points,\n        timeLimit: question.timeLimit\n      };\n      console.log('üíæ QuestionEditor handleSubmit - About to save question:', {\n        isNewQuestion,\n        quizId,\n        questionId,\n        questionData\n      });\n      if (isNewQuestion) {\n        console.log('‚ûï Creating new question');\n        await quizAPI.createQuestion(quizId, questionData);\n        setSuccess('Question created successfully!');\n      } else {\n        console.log('üìù Updating existing question');\n        // Validate questionId before making API call\n        if (!questionId || questionId === 'undefined' || questionId === 'null') {\n          console.error('‚ùå Invalid questionId detected in QuestionEditor:', {\n            questionId,\n            quizId\n          });\n          setError('Invalid question ID. Please navigate back and try again.');\n          return;\n        }\n        await quizAPI.createOrUpdateQuestion(quizId, questionId, questionData);\n        setSuccess('Question updated successfully!');\n      }\n\n      // Redirect back to questions list after a short delay\n      setTimeout(() => {\n        navigate(`/quiz/${quizId}/questions`);\n      }, 1500);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error saving question:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to save question. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('jwt');\n    navigate('/');\n  };\n  if (!isValidQuestionId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [\"Invalid question ID: \\\"\", questionId, \"\\\". Please navigate back and try again.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/dashboard'),\n          className: \"btn btn-secondary\",\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading && !quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        maxWidth: '700px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            style: {\n              margin: 0,\n              fontSize: '2rem'\n            },\n            children: isNewQuestion ? '‚ûï New Question' : '‚úèÔ∏è Edit Question'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"subtitle\",\n            style: {\n              margin: '5px 0 0 0'\n            },\n            children: [\"Quiz: \", quiz === null || quiz === void 0 ? void 0 : quiz.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/quiz/${quizId}/questions`),\n            className: \"btn btn-secondary\",\n            style: {\n              marginRight: '10px'\n            },\n            children: \"\\u2190 Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"btn btn-secondary\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"questionText\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"questionText\",\n            value: question.questionText,\n            onChange: handleQuestionChange,\n            placeholder: \"Enter your question\",\n            required: true,\n            rows: \"3\",\n            style: {\n              width: '100%',\n              padding: '12px 16px',\n              border: '2px solid #e1e5e9',\n              borderRadius: '8px',\n              fontSize: '16px',\n              resize: 'vertical',\n              fontFamily: 'inherit'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Answer Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-label\",\n              children: [\"Option \", String.fromCharCode(65 + index), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: option,\n              onChange: e => handleOptionChange(index, e.target.value),\n              placeholder: `Enter option ${String.fromCharCode(65 + index)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"correct-answer\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"correctAnswer\",\n              children: \"Correct Answer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"correctAnswer\",\n              value: question.correctAnswerIndex,\n              onChange: handleCorrectAnswerChange,\n              children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: index,\n                disabled: !option.trim(),\n                children: [\"Option \", String.fromCharCode(65 + index), option.trim() ? `: ${option}` : ' (empty)']\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr',\n            gap: '20px',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"points\",\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"points\",\n              value: question.points,\n              onChange: handlePointsChange,\n              min: \"1\",\n              max: \"100\",\n              placeholder: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"timeLimit\",\n              children: \"Time Limit (seconds)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"timeLimit\",\n              value: question.timeLimit,\n              onChange: handleTimeLimitChange,\n              min: \"5\",\n              max: \"300\",\n              placeholder: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: loading,\n            style: {\n              flex: 1\n            },\n            children: loading ? 'Saving...' : isNewQuestion ? 'Create Question' : 'Update Question'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => navigate(`/quiz/${quizId}/questions`),\n            className: \"btn btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionEditor, \"PSndlo1REGGbisS1pM0h+ZrYZv0=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = QuestionEditor;\nexport default QuestionEditor;\nvar _c;\n$RefreshReg$(_c, \"QuestionEditor\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","quizAPI","jsxDEV","_jsxDEV","QuestionEditor","_s","quiz","setQuiz","question","setQuestion","questionText","options","correctAnswerIndex","points","timeLimit","loading","setLoading","error","setError","success","setSuccess","navigate","params","quizId","questionId","urlSuggestsNew","window","location","pathname","includes","endsWith","isNewQuestion","isEditing","console","log","allParams","loadQuizAndQuestion","isValidQuestionId","isNaN","currentUrl","expectedPatterns","extractedParams","quizResponse","getQuiz","data","questionResponse","getQuestion","questionData","err","handleQuestionChange","e","prev","target","value","handleOptionChange","index","map","option","i","handleCorrectAnswerChange","parseInt","handlePointsChange","handleTimeLimitChange","validateQuestion","trim","filledOptions","filter","length","handleSubmit","preventDefault","opt","Boolean","correctAnswer","createQuestion","createOrUpdateQuestion","setTimeout","_err$response","_err$response$data","response","message","handleLogout","localStorage","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","maxWidth","display","justifyContent","alignItems","marginBottom","margin","fontSize","title","marginRight","onSubmit","htmlFor","id","onChange","placeholder","required","rows","width","padding","border","borderRadius","resize","fontFamily","String","fromCharCode","type","disabled","gridTemplateColumns","gap","min","max","flex","_c","$RefreshReg$"],"sources":["C:/Users/mordy.arnon/exten/kahoot-client/src/components/QuestionEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { quizAPI } from '../services/api';\r\n\r\nconst QuestionEditor = () => {\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [question, setQuestion] = useState({\r\n    questionText: '',\r\n    options: ['', '', '', ''],\r\n    correctAnswerIndex: 0,\r\n    points: 10,\r\n    timeLimit: 30\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const { quizId, questionId } = params;\r\n  \r\n  // Enhanced logic to detect new question creation\r\n  const urlSuggestsNew = window.location.pathname.includes('/question/new') || \r\n                         window.location.pathname.endsWith('/question/new');\r\n  const isNewQuestion = questionId === 'new' || !questionId || questionId === 'undefined' || urlSuggestsNew;\r\n  const isEditing = !isNewQuestion;\r\n  \r\n  useEffect(() => {\r\n    console.log('üîç QuestionEditor mounted with params:', { \r\n      quizId, \r\n      questionId, \r\n      isNewQuestion, \r\n      isEditing,\r\n      location: window.location.pathname,\r\n      allParams: params\r\n    });\r\n    loadQuizAndQuestion();\r\n  }, [quizId, questionId]);\r\n\r\n  // Validate questionId early\r\n  const isValidQuestionId = !questionId || questionId === 'new' || \r\n    (questionId && questionId !== 'undefined' && questionId !== 'null' && !isNaN(questionId));\r\n    \r\n  // Debug route matching\r\n  console.log('üõ£Ô∏è Route analysis:', {\r\n    currentUrl: window.location.pathname,\r\n    expectedPatterns: [\r\n      '/quiz/:quizId/question/new',\r\n      '/quiz/:quizId/question/:questionId/edit'\r\n    ],\r\n    extractedParams: { quizId, questionId },\r\n    isNewQuestion,\r\n    isEditing,\r\n    isValidQuestionId\r\n  });\r\n\r\n  const loadQuizAndQuestion = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Always load quiz info\r\n      const quizResponse = await quizAPI.getQuiz(quizId);\r\n      setQuiz(quizResponse.data);\r\n      \r\n      // Load question if editing\r\n      if (isEditing) {\r\n        console.log('üîÑ Attempting to load question for editing:', { quizId, questionId, isEditing });\r\n        \r\n        if (!questionId || questionId === 'undefined' || questionId === 'null') {\r\n          console.error('‚ùå Cannot load question - invalid questionId:', questionId);\r\n          setError('Invalid question ID for editing');\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          const questionResponse = await quizAPI.getQuestion(quizId, questionId);\r\n          const questionData = questionResponse.data;\r\n          console.log('‚úÖ Question loaded successfully:', questionData);\r\n          \r\n          setQuestion({\r\n            questionText: questionData.questionText,\r\n            options: questionData.options,\r\n            correctAnswerIndex: questionData.correctAnswerIndex,\r\n            points: questionData.points || 10,\r\n            timeLimit: questionData.timeLimit || 30\r\n          });\r\n        } catch (err) {\r\n          console.error('‚ùå Error loading question:', err);\r\n          setError('Question not found');\r\n        }\r\n      } else {\r\n        console.log('‚ûï Creating new question - no data to load');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading quiz:', err);\r\n      setError('Quiz not found');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleQuestionChange = (e) => {\r\n    setQuestion(prev => ({\r\n      ...prev,\r\n      questionText: e.target.value\r\n    }));\r\n  };\r\n\r\n  const handleOptionChange = (index, value) => {\r\n    setQuestion(prev => ({\r\n      ...prev,\r\n      options: prev.options.map((option, i) => i === index ? value : option)\r\n    }));\r\n  };\r\n\r\n  const handleCorrectAnswerChange = (e) => {\r\n    setQuestion(prev => ({\r\n      ...prev,\r\n      correctAnswerIndex: parseInt(e.target.value)\r\n    }));\r\n  };\r\n\r\n  const handlePointsChange = (e) => {\r\n    setQuestion(prev => ({\r\n      ...prev,\r\n      points: parseInt(e.target.value) || 10\r\n    }));\r\n  };\r\n\r\n  const handleTimeLimitChange = (e) => {\r\n    setQuestion(prev => ({\r\n      ...prev,\r\n      timeLimit: parseInt(e.target.value) || 30\r\n    }));\r\n  };\r\n\r\n  const validateQuestion = () => {\r\n    if (!question.questionText.trim()) {\r\n      setError('Please enter a question');\r\n      return false;\r\n    }\r\n\r\n    const filledOptions = question.options.filter(option => option.trim());\r\n    if (filledOptions.length < 2) {\r\n      setError('Please provide at least 2 options');\r\n      return false;\r\n    }\r\n\r\n    if (!question.options[question.correctAnswerIndex].trim()) {\r\n      setError('The correct answer option cannot be empty');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    if (!validateQuestion()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const questionData = {\r\n        question: question.questionText.trim(),\r\n        options: question.options.map(opt => opt.trim()).filter(Boolean),\r\n        correctAnswer: question.correctAnswerIndex,\r\n        points: question.points,\r\n        timeLimit: question.timeLimit\r\n      };\r\n\r\n      console.log('üíæ QuestionEditor handleSubmit - About to save question:', {\r\n        isNewQuestion,\r\n        quizId,\r\n        questionId,\r\n        questionData\r\n      });\r\n\r\n      if (isNewQuestion) {\r\n        console.log('‚ûï Creating new question');\r\n        await quizAPI.createQuestion(quizId, questionData);\r\n        setSuccess('Question created successfully!');\r\n      } else {\r\n        console.log('üìù Updating existing question');\r\n        // Validate questionId before making API call\r\n        if (!questionId || questionId === 'undefined' || questionId === 'null') {\r\n          console.error('‚ùå Invalid questionId detected in QuestionEditor:', { questionId, quizId });\r\n          setError('Invalid question ID. Please navigate back and try again.');\r\n          return;\r\n        }\r\n        await quizAPI.createOrUpdateQuestion(quizId, questionId, questionData);\r\n        setSuccess('Question updated successfully!');\r\n      }\r\n\r\n      // Redirect back to questions list after a short delay\r\n      setTimeout(() => {\r\n        navigate(`/quiz/${quizId}/questions`);\r\n      }, 1500);\r\n\r\n    } catch (err) {\r\n      console.error('Error saving question:', err);\r\n      setError(err.response?.data?.message || 'Failed to save question. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('jwt');\r\n    navigate('/');\r\n  };\r\n\r\n  if (!isValidQuestionId) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <div className=\"error\">Invalid question ID: \"{questionId}\". Please navigate back and try again.</div>\r\n          <button onClick={() => navigate('/dashboard')} className=\"btn btn-secondary\">\r\n            Back to Dashboard\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading && !quiz) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <h2>Loading...</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\" style={{ maxWidth: '700px' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>\r\n          <div>\r\n            <h1 className=\"title\" style={{ margin: 0, fontSize: '2rem' }}>\r\n              {isNewQuestion ? '‚ûï New Question' : '‚úèÔ∏è Edit Question'}\r\n            </h1>\r\n            <p className=\"subtitle\" style={{ margin: '5px 0 0 0' }}>\r\n              Quiz: {quiz?.title}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <button \r\n              onClick={() => navigate(`/quiz/${quizId}/questions`)} \r\n              className=\"btn btn-secondary\" \r\n              style={{ marginRight: '10px' }}\r\n            >\r\n              ‚Üê Questions\r\n            </button>\r\n            <button onClick={handleLogout} className=\"btn btn-secondary\">\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"questionText\">Question</label>\r\n            <textarea\r\n              id=\"questionText\"\r\n              value={question.questionText}\r\n              onChange={handleQuestionChange}\r\n              placeholder=\"Enter your question\"\r\n              required\r\n              rows=\"3\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '12px 16px',\r\n                border: '2px solid #e1e5e9',\r\n                borderRadius: '8px',\r\n                fontSize: '16px',\r\n                resize: 'vertical',\r\n                fontFamily: 'inherit'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"question-card\">\r\n            <h3>Answer Options</h3>\r\n            {question.options.map((option, index) => (\r\n              <div key={index} className=\"option\">\r\n                <div className=\"option-label\">Option {String.fromCharCode(65 + index)}:</div>\r\n                <input\r\n                  type=\"text\"\r\n                  value={option}\r\n                  onChange={(e) => handleOptionChange(index, e.target.value)}\r\n                  placeholder={`Enter option ${String.fromCharCode(65 + index)}`}\r\n                />\r\n              </div>\r\n            ))}\r\n\r\n            <div className=\"correct-answer\">\r\n              <label htmlFor=\"correctAnswer\">Correct Answer:</label>\r\n              <select\r\n                id=\"correctAnswer\"\r\n                value={question.correctAnswerIndex}\r\n                onChange={handleCorrectAnswerChange}\r\n              >\r\n                {question.options.map((option, index) => (\r\n                  <option key={index} value={index} disabled={!option.trim()}>\r\n                    Option {String.fromCharCode(65 + index)}{option.trim() ? `: ${option}` : ' (empty)'}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '20px' }}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"points\">Points</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"points\"\r\n                value={question.points}\r\n                onChange={handlePointsChange}\r\n                min=\"1\"\r\n                max=\"100\"\r\n                placeholder=\"10\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"timeLimit\">Time Limit (seconds)</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"timeLimit\"\r\n                value={question.timeLimit}\r\n                onChange={handleTimeLimitChange}\r\n                min=\"5\"\r\n                max=\"300\"\r\n                placeholder=\"30\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {error && <div className=\"error\">{error}</div>}\r\n          {success && <div className=\"success\">{success}</div>}\r\n\r\n          <div style={{ display: 'flex', gap: '10px' }}>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={loading}\r\n              style={{ flex: 1 }}\r\n            >\r\n              {loading ? 'Saving...' : (isNewQuestion ? 'Create Question' : 'Update Question')}\r\n            </button>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={() => navigate(`/quiz/${quizId}/questions`)}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}