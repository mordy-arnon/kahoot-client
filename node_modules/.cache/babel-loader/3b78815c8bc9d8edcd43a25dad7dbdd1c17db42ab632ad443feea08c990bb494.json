{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include JWT token and logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  const token = localStorage.getItem('jwt');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Log all API requests for debugging\n  console.log(`🚀 API Request [${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()}]:`, {\n    url: config.url,\n    baseURL: config.baseURL,\n    fullUrl: `${config.baseURL}${config.url}`,\n    data: config.data,\n    params: config.params\n  });\n  return config;\n}, error => {\n  console.error('❌ API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for logging\napi.interceptors.response.use(response => {\n  var _response$config$meth;\n  console.log(`✅ API Response [${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()}]:`, {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$config, _error$config$method, _error$config2, _error$response, _error$response2, _error$response2$data, _error$response3;\n  console.error(`❌ API Response Error [${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : (_error$config$method = _error$config.method) === null || _error$config$method === void 0 ? void 0 : _error$config$method.toUpperCase()}]:`, {\n    url: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message,\n    fullError: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n  });\n  return Promise.reject(error);\n});\n\n// API functions\nexport const authAPI = {\n  signup: userData => api.post('/api/auth/signup', userData),\n  login: credentials => api.post('/api/auth/login', credentials)\n};\nexport const quizAPI = {\n  // Quiz operations\n  getAllQuizzes: () => api.get('/api/quiz'),\n  getQuiz: quizId => api.get(`/api/quiz/${quizId}`),\n  createQuiz: quizData => api.post('/api/quiz', quizData),\n  updateQuiz: (quizId, quizData) => api.post(`/api/quiz/${quizId}`, quizData),\n  // Question operations\n  getQuestions: quizId => api.get(`/api/quiz/${quizId}/question`),\n  getQuestion: (quizId, questionId) => api.get(`/api/quiz/${quizId}/question/${questionId}`),\n  createQuestion: (quizId, questionData) => api.post(`/api/quiz/${quizId}/question`, questionData),\n  createOrUpdateQuestion: (quizId, questionId, questionData) => api.post(`/api/quiz/${quizId}/question/${questionId}`, questionData)\n};\n\n// Legacy API for backward compatibility\nexport const gameAPI = {\n  createGame: () => quizAPI.createQuiz({\n    title: 'New Quiz',\n    description: 'Created from question creator'\n  }),\n  createQuestion: (gameId, questionId, questionData) => {\n    // For legacy support, use the create question endpoint without specifying ID\n    // The server will auto-assign the question ID\n    console.log('Legacy createQuestion called:', {\n      gameId,\n      questionId,\n      questionData\n    });\n    return quizAPI.createQuestion(gameId, questionData);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","_config$method","token","localStorage","getItem","Authorization","console","log","method","toUpperCase","url","fullUrl","data","params","error","Promise","reject","response","_response$config$meth","status","_error$config","_error$config$method","_error$config2","_error$response","_error$response2","_error$response2$data","_error$response3","message","fullError","authAPI","signup","userData","post","login","credentials","quizAPI","getAllQuizzes","get","getQuiz","quizId","createQuiz","quizData","updateQuiz","getQuestions","getQuestion","questionId","createQuestion","questionData","createOrUpdateQuestion","gameAPI","createGame","title","description","gameId"],"sources":["C:/Users/mordy.arnon/exten/kahoot-client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to include JWT token and logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('jwt');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Log all API requests for debugging\r\n    console.log(`🚀 API Request [${config.method?.toUpperCase()}]:`, {\r\n      url: config.url,\r\n      baseURL: config.baseURL,\r\n      fullUrl: `${config.baseURL}${config.url}`,\r\n      data: config.data,\r\n      params: config.params\r\n    });\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('❌ API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for logging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`✅ API Response [${response.config.method?.toUpperCase()}]:`, {\r\n      url: response.config.url,\r\n      status: response.status,\r\n      data: response.data\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(`❌ API Response Error [${error.config?.method?.toUpperCase()}]:`, {\r\n      url: error.config?.url,\r\n      status: error.response?.status,\r\n      message: error.response?.data?.message || error.message,\r\n      fullError: error.response?.data\r\n    });\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API functions\r\nexport const authAPI = {\r\n  signup: (userData) => api.post('/api/auth/signup', userData),\r\n  login: (credentials) => api.post('/api/auth/login', credentials),\r\n};\r\n\r\nexport const quizAPI = {\r\n  // Quiz operations\r\n  getAllQuizzes: () => api.get('/api/quiz'),\r\n  getQuiz: (quizId) => api.get(`/api/quiz/${quizId}`),\r\n  createQuiz: (quizData) => api.post('/api/quiz', quizData),\r\n  updateQuiz: (quizId, quizData) => api.post(`/api/quiz/${quizId}`, quizData),\r\n  \r\n  // Question operations\r\n  getQuestions: (quizId) => api.get(`/api/quiz/${quizId}/question`),\r\n  getQuestion: (quizId, questionId) => api.get(`/api/quiz/${quizId}/question/${questionId}`),\r\n  createQuestion: (quizId, questionData) => api.post(`/api/quiz/${quizId}/question`, questionData),\r\n  createOrUpdateQuestion: (quizId, questionId, questionData) => \r\n    api.post(`/api/quiz/${quizId}/question/${questionId}`, questionData),\r\n};\r\n\r\n// Legacy API for backward compatibility\r\nexport const gameAPI = {\r\n  createGame: () => quizAPI.createQuiz({ title: 'New Quiz', description: 'Created from question creator' }),\r\n  createQuestion: (gameId, questionId, questionData) => {\r\n    // For legacy support, use the create question endpoint without specifying ID\r\n    // The server will auto-assign the question ID\r\n    console.log('Legacy createQuestion called:', { gameId, questionId, questionData });\r\n    return quizAPI.createQuestion(gameId, questionData);\r\n  },\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}